/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package librarysystem.librarian.boundary;

import librarysystem.entity.BookCopy;
import java.awt.Frame;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import librarysystem.librarian.controller.CRUDBookController;

/**
 *
 * @author pdc
 */
public class ViewBookCopyList extends javax.swing.JFrame {

    private static Integer booknumber;
    private static String booktitle;
    Frame frame = new Frame();

    /**
     *
     * @return
     */
    public Frame getFrame() {
        return frame;
    }

    /**
     *
     * @param frame
     */
    public void setFrame(Frame frame) {
        this.frame = frame;
    }

    /**
     *
     * @return
     */
    public static String getBooktitle() {
        return booktitle;
    }

    /**
     *
     * @param booktitle
     */
    public static void setBooktitle(String booktitle) {
        ViewBookCopyList.booktitle = booktitle;
    }

    /**
     *
     * @return
     */
    public static Integer getBooknumber() {
        return booknumber;
    }

    /**
     *
     * @param booknumber
     */
    public static void setBooknumber(Integer booknumber) {
        ViewBookCopyList.booknumber = booknumber;
    }

    /**
     * Creates new form BookCopyList
     *
     * @param booknumber
     * @param booktitle
     * @param frame
     * @throws java.sql.SQLException
     */
    public ViewBookCopyList(Integer booknumber, String booktitle, Frame frame) throws SQLException {
        ViewBookCopyList.booknumber = booknumber;
        ViewBookCopyList.booktitle = booktitle;
        this.frame = frame;
        initComponents();
        initComponentsDetails();
        setInitTableModel();
        this.setLocationRelativeTo(null);
        setValueToBookCopyTableModel();
        jLabelBookTitle.setText("\"" + booktitle + "\"");
        jButtonUpdateCopyBook.setEnabled(false);
        jButtonDeleteCopyBook.setEnabled(false);
    }

    private void initComponentsDetails() {
        jTableBookCopyList.setDefaultEditor(Object.class, null);
        //jTableCardList.setDefaultEditor(Object.class, null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableBookCopyList = new javax.swing.JTable(bookTableModel);
        jLabel1 = new javax.swing.JLabel();
        jButtonUpdateCopyBook = new javax.swing.JButton();
        jButtonDeleteCopyBook = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabelBookTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View Book Copy' List");
        setAlwaysOnTop(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jTableBookCopyList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableBookCopyListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableBookCopyList);

        jLabel1.setText("Book Copy List of ");

        jButtonUpdateCopyBook.setText("Update");
        jButtonUpdateCopyBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateCopyBookActionPerformed(evt);
            }
        });

        jButtonDeleteCopyBook.setText("Delete");
        jButtonDeleteCopyBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteCopyBookActionPerformed(evt);
            }
        });

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabelBookTitle.setText("Book Title");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelBookTitle)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDeleteCopyBook, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonUpdateCopyBook, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButtonDeleteCopyBook, jButtonUpdateCopyBook});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelBookTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonUpdateCopyBook)
                    .addComponent(jButtonDeleteCopyBook)
                    .addComponent(jButton1))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDeleteCopyBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteCopyBookActionPerformed
        // TODO add your handling code here:
        int row = jTableBookCopyList.getSelectedRow();
        int bookcopynumber = (int) jTableBookCopyList.getValueAt(row, 0);
        try {
            new CRUDBookController().deleteBookCopybyBookCopyNumber(bookcopynumber);
        } catch (SQLException ex) {
            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            setValueToBookCopyTableModel();
//        frame.setEnabled(true);
//        frame.setAlwaysOnTop(true);
//super.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(ViewBookCopyList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonDeleteCopyBookActionPerformed

    private void jButtonUpdateCopyBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateCopyBookActionPerformed
        // TODO add your handling code here:
        int row = jTableBookCopyList.getSelectedRow();
        int bookcopynumber = (int) jTableBookCopyList.getValueAt(row, 0);
        int price = (int) jTableBookCopyList.getValueAt(row, 1);
        String status = (String) jTableBookCopyList.getValueAt(row, 2);
        UpdateBookCopy frame = new UpdateBookCopy(bookcopynumber, price, status, this);
        //UpdateCardInfo frame = new UpdateCardInfo(borrowercardnumber, username, activedcode, status, expireddate);
        frame.setVisible(true);
        this.setAlwaysOnTop(false);
        this.setEnabled(false);
    }//GEN-LAST:event_jButtonUpdateCopyBookActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        super.dispose();
        frame.setEnabled(true);
        frame.setAlwaysOnTop(true);
        //System.out.println(this.getClass());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        frame.setEnabled(true);
        frame.setAlwaysOnTop(true);
    }//GEN-LAST:event_formWindowClosed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        jButtonDeleteCopyBook.setEnabled(false);
        jButtonUpdateCopyBook.setEnabled(false);
        try {
            // TODO add your handling code here:
            setValueToBookCopyTableModel();
        } catch (SQLException ex) {
            Logger.getLogger(ViewBookCopyList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowActivated

    private void jTableBookCopyListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBookCopyListMouseClicked
        // TODO add your handling code here:
        jButtonDeleteCopyBook.setEnabled(true);
        jButtonUpdateCopyBook.setEnabled(true);
    }//GEN-LAST:event_jTableBookCopyListMouseClicked

    private final DefaultTableModel bookTableModel = new DefaultTableModel() {
//        @Override
//        public boolean isCellEditable(int row, int column) {
//            // make read only fields except column 0,13,14
//            return column == 1 || column == 2;
//        }
    };

    private void setInitTableModel() {
        bookTableModel.addColumn("Book Copy Number");
        bookTableModel.addColumn("Price");
        bookTableModel.addColumn("Status");
    }

    private void setValueToBookCopyTableModel() throws SQLException {
        //bookTableModel.addColumn("Added to Wishlist");
        //ArrayList allBooks = new CRUDBookController().getAllBook();
        while (bookTableModel.getRowCount() > 0) {
            bookTableModel.removeRow(0);
        }
        ArrayList allBooks = new CRUDBookController().getBookCopyListbyBookNumber(booknumber);
        for (int i = 0; i < allBooks.size(); i++) {
            //System.out.println(allBooks.get(i));
            BookCopy bookCopy = (BookCopy) allBooks.get(i);
            bookTableModel.addRow(new Object[]{bookCopy.getBookCopyNumber(), bookCopy.getPrice(), convertBookStatus(bookCopy.getStatus())});
        }
    }

    private String convertBookStatus(Integer status) {
        if (status == 0) {
            return "Available";
        }
        return "Borrowed";
    }
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(BookCopyList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(BookCopyList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(BookCopyList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(BookCopyList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new BookCopyList(booknumber).setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonDeleteCopyBook;
    private javax.swing.JButton jButtonUpdateCopyBook;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelBookTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableBookCopyList;
    // End of variables declaration//GEN-END:variables
}
